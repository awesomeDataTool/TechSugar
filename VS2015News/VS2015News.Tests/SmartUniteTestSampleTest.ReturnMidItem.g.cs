using Microsoft.Pex.Framework.Generated;
using Microsoft.VisualStudio.TestTools.UnitTesting;
// <copyright file="SmartUniteTestSampleTest.ReturnMidItem.g.cs">Copyright ©  2014</copyright>
// <auto-generated>
// This file contains automatically generated tests.
// Do not modify this file manually.
// 
// If the contents of this file becomes outdated, you can delete it.
// For example, if it no longer compiles.
// </auto-generated>
using System;

namespace VS2015News
{
    public partial class SmartUniteTestSampleTest
    {
[TestMethod]
[PexGeneratedBy(typeof(SmartUniteTestSampleTest))]
[ExpectedException(typeof(NotImplementedException))]
public void ReturnMidItemThrowsNotImplementedException868()
{
    int i;
    SmartUniteTestSample s0 = new SmartUniteTestSample();
    i = this.ReturnMidItem(s0, (int[])null);
}
[TestMethod]
[PexGeneratedBy(typeof(SmartUniteTestSampleTest))]
[PexRaisedException(typeof(NotImplementedException))]
public void ReturnMidItemThrowsIndexOutOfRangeException300()
{
    int i;
    SmartUniteTestSample s0 = new SmartUniteTestSample();
    int[] ints = new int[0];
    i = this.ReturnMidItem(s0, ints);
}
[TestMethod]
[PexGeneratedBy(typeof(SmartUniteTestSampleTest))]
public void ReturnMidItem489()
{
    int i;
    SmartUniteTestSample s0 = new SmartUniteTestSample();
    int[] ints = new int[1];
    i = this.ReturnMidItem(s0, ints);
    Assert.AreEqual<int>(0, i);
    Assert.IsNotNull((object)s0);
}
[TestMethod]
[PexGeneratedBy(typeof(SmartUniteTestSampleTest))]
[ExpectedException(typeof(NotImplementedException))]
public void ReturnMidItemThrowsNotImplementedException86801()
{
    int i;
    SmartUniteTestSample s0 = new SmartUniteTestSample();
    i = this.ReturnMidItem(s0, (int[])null);
}
[TestMethod]
[PexGeneratedBy(typeof(SmartUniteTestSampleTest))]
[ExpectedException(typeof(NotImplementedException))]
public void ReturnMidItemThrowsNotImplementedException662()
{
    int i;
    SmartUniteTestSample s0 = new SmartUniteTestSample();
    int[] ints = new int[0];
    i = this.ReturnMidItem(s0, ints);
}
[TestMethod]
[PexGeneratedBy(typeof(SmartUniteTestSampleTest))]
public void ReturnMidItem48901()
{
    int i;
    SmartUniteTestSample s0 = new SmartUniteTestSample();
    int[] ints = new int[1];
    i = this.ReturnMidItem(s0, ints);
    Assert.AreEqual<int>(0, i);
    Assert.IsNotNull((object)s0);
}
[TestMethod]
[PexGeneratedBy(typeof(SmartUniteTestSampleTest))]
[ExpectedException(typeof(NotImplementedException))]
public void ReturnMidItemThrowsNotImplementedException86802()
{
    int i;
    SmartUniteTestSample s0 = new SmartUniteTestSample();
    i = this.ReturnMidItem(s0, (int[])null);
}
[TestMethod]
[PexGeneratedBy(typeof(SmartUniteTestSampleTest))]
[ExpectedException(typeof(NotImplementedException))]
public void ReturnMidItemThrowsNotImplementedException66201()
{
    int i;
    SmartUniteTestSample s0 = new SmartUniteTestSample();
    int[] ints = new int[0];
    i = this.ReturnMidItem(s0, ints);
}
[TestMethod]
[PexGeneratedBy(typeof(SmartUniteTestSampleTest))]
public void ReturnMidItem48902()
{
    int i;
    SmartUniteTestSample s0 = new SmartUniteTestSample();
    int[] ints = new int[1];
    i = this.ReturnMidItem(s0, ints);
    Assert.AreEqual<int>(0, i);
    Assert.IsNotNull((object)s0);
}
[TestMethod]
[PexGeneratedBy(typeof(SmartUniteTestSampleTest))]
[ExpectedException(typeof(NotImplementedException))]
public void ReturnMidItemThrowsNotImplementedException86803()
{
    int i;
    SmartUniteTestSample s0 = new SmartUniteTestSample();
    i = this.ReturnMidItem(s0, (int[])null);
}
[TestMethod]
[PexGeneratedBy(typeof(SmartUniteTestSampleTest))]
[ExpectedException(typeof(NotImplementedException))]
public void ReturnMidItemThrowsNotImplementedException66202()
{
    int i;
    SmartUniteTestSample s0 = new SmartUniteTestSample();
    int[] ints = new int[0];
    i = this.ReturnMidItem(s0, ints);
}
[TestMethod]
[PexGeneratedBy(typeof(SmartUniteTestSampleTest))]
public void ReturnMidItem48903()
{
    int i;
    SmartUniteTestSample s0 = new SmartUniteTestSample();
    int[] ints = new int[1];
    i = this.ReturnMidItem(s0, ints);
    Assert.AreEqual<int>(0, i);
    Assert.IsNotNull((object)s0);
}
    }
}
