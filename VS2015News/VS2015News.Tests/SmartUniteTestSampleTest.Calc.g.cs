using Microsoft.Pex.Framework.Generated;
using Microsoft.VisualStudio.TestTools.UnitTesting;
// <copyright file="SmartUniteTestSampleTest.Calc.g.cs">Copyright ©  2014</copyright>
// <auto-generated>
// This file contains automatically generated tests.
// Do not modify this file manually.
// 
// If the contents of this file becomes outdated, you can delete it.
// For example, if it no longer compiles.
// </auto-generated>
using System;

namespace VS2015News
{
    public partial class SmartUniteTestSampleTest
    {
[TestMethod]
[PexGeneratedBy(typeof(SmartUniteTestSampleTest))]
public void Calc794()
{
    int i;
    SmartUniteTestSample s0 = new SmartUniteTestSample();
    i = this.Calc(s0, 0, 0);
    Assert.AreEqual<int>(0, i);
    Assert.IsNotNull((object)s0);
}
[TestMethod]
[PexGeneratedBy(typeof(SmartUniteTestSampleTest))]
public void Calc745()
{
    int i;
    SmartUniteTestSample s0 = new SmartUniteTestSample();
    i = this.Calc(s0, 1, 0);
    Assert.AreEqual<int>(1, i);
    Assert.IsNotNull((object)s0);
}
[TestMethod]
[PexGeneratedBy(typeof(SmartUniteTestSampleTest))]
public void Calc780()
{
    int i;
    SmartUniteTestSample s0 = new SmartUniteTestSample();
    i = this.Calc(s0, int.MinValue, 0);
    Assert.AreEqual<int>(-1, i);
    Assert.IsNotNull((object)s0);
}
[TestMethod]
[PexGeneratedBy(typeof(SmartUniteTestSampleTest))]
public void Calc409()
{
    int i;
    SmartUniteTestSample s0 = new SmartUniteTestSample();
    i = this.Calc(s0, 0, int.MinValue);
    Assert.AreEqual<int>(-2, i);
    Assert.IsNotNull((object)s0);
}
    }
}
